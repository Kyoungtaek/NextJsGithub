{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport fetch from 'isomorphic-unfetch';\nimport Profile from '../../components/Profile';\n\nconst name = ({\n  user\n}) => {\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Profile, {\n      user: user\n    })\n  });\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    name\n  } = query;\n\n  try {\n    let user;\n    let repos;\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    }\n\n    const repoRes = await fetch(`https://api.github.com/users/${name}/repos?sort=updated&page=1&per_page=10`);\n\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    }\n\n    console.log(repos);\n    return {\n      props: {\n        user,\n        respos\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      props: {}\n    };\n  }\n};\nexport default name;","map":null,"metadata":{},"sourceType":"module"}