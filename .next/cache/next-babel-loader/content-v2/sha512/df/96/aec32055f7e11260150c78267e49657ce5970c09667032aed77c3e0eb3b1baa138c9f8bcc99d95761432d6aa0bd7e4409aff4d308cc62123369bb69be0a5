{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport fetch from 'isomorphic-unfetch';\nimport Profile from '../../components/Profile';\nconst style = [\".user-contents-wrapper.jsx-3912530449{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:20px;}\", \".repos-wrapper.jsx-3912530449{width:100%;height:100vh;overflow:scroll;padding:0px 16px;}\", \".repos-header.jsx-3912530449{padding:16px 0;font-size:14px;font-weight:600;border-bottom:1px solid #e1e4e8;}\", \".repos-count.jsx-3912530449{display:inline-block;padding:2px 5px;margin-left:6px;font-size:12px;font-weight:600;line-height:1;color:#586069;background-color:rgba(27,31,35,0.08);border-radius:20px;}\"];\nstyle.__hash = \"3912530449\";\n\nconst name = ({\n  user,\n  repos\n}) => {\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: `jsx-${style.__hash}` + \" \" + \"user-contents-wrapper\",\n    children: [/*#__PURE__*/_jsx(Profile, {\n      user: user\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `jsx-${style.__hash}` + \" \" + \"repos-wrapper\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: `jsx-${style.__hash}` + \" \" + \"repos-header\",\n        children: [\"Repositories\", /*#__PURE__*/_jsx(\"span\", {\n          className: `jsx-${style.__hash}` + \" \" + \"repos-count\",\n          children: user.public_repos\n        })]\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: style.__hash,\n      children: style\n    })]\n  });\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    name\n  } = query;\n\n  try {\n    let user;\n    let repos;\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    }\n\n    const repoRes = await fetch(`https://api.github.com/users/${name}/repos?sort=updated&page=1&per_page=10`);\n\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    }\n\n    console.log(repos);\n    return {\n      props: {\n        user,\n        repos\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      props: {}\n    };\n  }\n};\nexport default name;","map":null,"metadata":{},"sourceType":"module"}