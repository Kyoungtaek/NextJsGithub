{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport fetch from 'isomorphic-unfetch';\nimport Profile from '../../components/Profile';\nconst style = css`\n  .user-contents-wrapper {\n    display: flex;\n    padding: 20px;\n  }\n  .repos-wrapper {\n    width: 100%;\n    height: 100vh;\n    overflow: scroll;\n    padding: 0px 16px;\n  }\n  .repos-header {\n    padding: 16px 0;\n    font-size: 14px;\n    font-weight: 600;\n    border-bottom: 1px solid #e1e4e8;\n  }\n  .repos-count {\n    display: inline-block;\n    padding: 2px 5px;\n    margin-left: 6px;\n    font-size: 12px;\n    font-weight: 600;\n    line-height: 1;\n    color: #586069;\n    background-color: rgba(27, 31, 35, 0.08);\n    border-radius: 20px;\n  }\n`;\n\nconst name = ({\n  user,\n  repos\n}) => {\n  if (!user) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: `jsx-${style.__hash}` + \" \" + \"user-contents-wrapper\",\n    children: [/*#__PURE__*/_jsx(Profile, {\n      user: user\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `jsx-${style.__hash}` + \" \" + \"repos-wrapper\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: `jsx-${style.__hash}` + \" \" + \"repos-header\",\n        children: [\"Repositories\", /*#__PURE__*/_jsx(\"span\", {\n          className: `jsx-${style.__hash}` + \" \" + \"repos-count\",\n          children: user.public_repos\n        })]\n      })\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: style.__hash,\n      children: style\n    })]\n  });\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const {\n    name\n  } = query;\n\n  try {\n    let user;\n    let repos;\n    const userRes = await fetch(`https://api.github.com/users/${name}`);\n\n    if (userRes.status === 200) {\n      user = await userRes.json();\n    }\n\n    const repoRes = await fetch(`https://api.github.com/users/${name}/repos?sort=updated&page=1&per_page=10`);\n\n    if (repoRes.status === 200) {\n      repos = await repoRes.json();\n    }\n\n    console.log(repos);\n    return {\n      props: {\n        user,\n        repos\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      props: {}\n    };\n  }\n};\nexport default name;","map":null,"metadata":{},"sourceType":"module"}